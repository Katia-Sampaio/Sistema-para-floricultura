package view;

import DAO.ClienteDAO;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Clientes;

public class TelaConsultaCli extends javax.swing.JFrame {

    /**
     * Creates new form ConsultaClientes
     */
    public TelaConsultaCli() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollBar1 = new javax.swing.JScrollBar();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtDS_NOME = new javax.swing.JTextField();
        txtNR_CPF = new javax.swing.JTextField();
        btnConsultar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCliente = new javax.swing.JTable();
        btnIncluirCli = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnDeletar = new javax.swing.JButton();
        btnFecharConsultCli = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consulta de Clientes");
        setResizable(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtros"));

        jLabel1.setText("Nome:");

        jLabel2.setText("CPF:");

        txtDS_NOME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDS_NOMEActionPerformed(evt);
            }
        });

        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtDS_NOME, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .addComponent(txtNR_CPF))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnConsultar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtDS_NOME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtNR_CPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(26, 26, 26))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Resultados"));

        tblCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "CPF", "E-mail", "Telefone", "CEP", "Endereco", "Cidade", "UF", "Pa√≠s"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCliente);

        btnIncluirCli.setText("Incluir");
        btnIncluirCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirCliActionPerformed(evt);
            }
        });

        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnDeletar.setText("Deletar");
        btnDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarActionPerformed(evt);
            }
        });

        btnFecharConsultCli.setText("Fechar");
        btnFecharConsultCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharConsultCliActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(btnIncluirCli, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(btnDeletar)
                .addGap(66, 66, 66)
                .addComponent(btnFecharConsultCli, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(88, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAlterar, btnDeletar, btnFecharConsultCli, btnIncluirCli});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIncluirCli, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeletar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFecharConsultCli, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAlterar, btnDeletar, btnFecharConsultCli, btnIncluirCli});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        String nomeCliente = "";
        long numeroCpf = 0; 
        
        if(txtDS_NOME.getText().trim().equals("")&& txtNR_CPF.getText().trim().equals("")){
         
            
            ArrayList <Clientes> listaCliente = ClienteDAO.listar();
            
            DefaultTableModel modelo = (DefaultTableModel) tblCliente.getModel();
            modelo.setRowCount(0);
            
            for(Clientes Cliente : listaCliente){
                modelo.addRow(new String[]{String.valueOf(Cliente.getIdCliente()),
                    Cliente.getNome(),
                    String.valueOf(Cliente.getCpf()),
                    Cliente.getEmail(),
                    Cliente.getTelefone(),
                    Cliente.getCep(),
                    Cliente.getEndereco(),
                    Cliente.getCidade(),
                    Cliente.getUf(),
                    Cliente.getPais(),
                    });
            }
            
            
        }else if(!txtDS_NOME.getText().trim().equals("")&& !txtNR_CPF.getText().trim().equals("")){
           nomeCliente = txtDS_NOME.getText();
           numeroCpf = Long.parseLong(txtNR_CPF.getText());
            ArrayList <Clientes> listaCliente = ClienteDAO.buscarNomeCPF(numeroCpf, nomeCliente);
            
            DefaultTableModel modelo = (DefaultTableModel) tblCliente.getModel();
            modelo.setRowCount(0);
            
            for(Clientes Cliente : listaCliente){
                modelo.addRow(new String[]{String.valueOf(Cliente.getIdCliente()),
                    Cliente.getNome(),
                    String.valueOf(Cliente.getCpf()),
                    Cliente.getEmail(),
                    Cliente.getTelefone(),
                    Cliente.getCep(),
                    Cliente.getEndereco(),
                    Cliente.getCidade(),
                    Cliente.getUf(),
                    Cliente.getPais(),
                    });
            }
            
        }else if(!txtDS_NOME.getText().trim().equals("")) {
            nomeCliente = txtDS_NOME.getText();
            
            ArrayList<Clientes> listaCliente = ClienteDAO.buscarClientePorNome(nomeCliente);
            
            DefaultTableModel modelo = (DefaultTableModel) tblCliente.getModel();
            modelo.setRowCount(0);
            
                for(Clientes Cliente : listaCliente){
                modelo.addRow(new String[]{String.valueOf(Cliente.getIdCliente()),
                       Cliente.getNome(),
                    String.valueOf(Cliente.getCpf()),
                    Cliente.getEmail(),
                    Cliente.getTelefone(),
                    Cliente.getCep(),
                    Cliente.getEndereco(),
                    Cliente.getCidade(),
                    Cliente.getUf(),
                    Cliente.getPais(),
                    });
            
        }
        }else {
           
             numeroCpf = Long.parseLong(txtNR_CPF.getText());
            
         
            ArrayList<Clientes> listaCliente = ClienteDAO.buscarClientePorCPF(numeroCpf);
            
            DefaultTableModel modelo = (DefaultTableModel) tblCliente.getModel();
            modelo.setRowCount(0);
            
            for(Clientes Cliente : listaCliente){
                modelo.addRow(new String[]{String.valueOf(Cliente.getIdCliente()),
                    Cliente.getNome(),
                    String.valueOf(Cliente.getCpf()),
                    Cliente.getEmail(),
                    Cliente.getTelefone(),
                    Cliente.getCep(),
                    Cliente.getEndereco(),
                    Cliente.getCidade(),
                    Cliente.getUf(),
                    Cliente.getPais(),
                    });
            }         
          
    }//GEN-LAST:event_btnConsultarActionPerformed
    }
    
    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        int id = 0, linha = 0;
        long CPF = 0;
        String Nome = "", Email = "", Telefone = "", Cep = "",Endereco = "", Cidade = "", Uf = "", Pais = "";
        
        linha = tblCliente.getSelectedRow();
                
        id = Integer.parseInt(tblCliente.getValueAt(linha,0).toString());
        Nome = tblCliente.getValueAt(linha,1).toString();
        CPF = Long.parseLong(tblCliente.getValueAt(linha,2).toString());
        Email = tblCliente.getValueAt(linha,3).toString();
        Telefone = tblCliente.getValueAt(linha,4).toString();
        Cep = tblCliente.getValueAt(linha,5).toString();
        Endereco = tblCliente.getValueAt(linha,6).toString();
        Cidade = tblCliente.getValueAt(linha,7).toString();
        Uf = tblCliente.getValueAt(linha,8).toString();
        Pais = tblCliente.getValueAt(linha,9).toString();
          
        
        Clientes objCliente = new Clientes();
       
        objCliente.setIdCliente(id);
        objCliente.setNome(Nome);
        objCliente.setCpf(CPF);
        objCliente.setEmail(Email);
        objCliente.setTelefone(Telefone);
        objCliente.setCep(Cep);
        objCliente.setEndereco(Endereco);
        objCliente.setCidade(Cidade);
        objCliente.setUf(Uf);
        objCliente.setPais(Pais);
        
        TelaCadClientes frame = new TelaCadClientes(objCliente);
        frame.setVisible(true);
        frame.setLocationRelativeTo(null);
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnIncluirCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirCliActionPerformed
        TelaCadClientes frame = new TelaCadClientes(); 
        frame. setVisible(true);
        frame.setLocationRelativeTo(null);
    }//GEN-LAST:event_btnIncluirCliActionPerformed

    private void btnDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarActionPerformed
        int id = 0, linha = 0, resultado = 0;
        String NomeCliente = "";
        boolean retVen, retDel, retIni = false;
        Object[] opcao = { "Sim", "N√£o" };
        
        linha = tblCliente.getSelectedRow();
        
        id = Integer.parseInt(tblCliente.getValueAt(linha,0).toString());
        NomeCliente =  tblCliente.getValueAt(linha,1).toString();
        
        retVen = ClienteDAO.ValidaVendasCliente(id);
        
        if(retVen){
            JOptionPane.showMessageDialog(this, "N√£o √© poss√≠vel excluir o cliente "+
                String.valueOf(id) +" - "+ NomeCliente + " pois o mesmo tem Vendas vinculadas ao seu cadastro.\n");
   
        }else{
            resultado = JOptionPane.showOptionDialog(null, "Deseja mesmo excluir o cliente "+
                String.valueOf(id) +" - "+ NomeCliente + " ?",
                "Deletar cliente",
                    JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, opcao, opcao[1]);
            
            if(resultado == 1){
                return;
            }

            retDel = ClienteDAO.excluir(id);

            if(retDel){
                JOptionPane.showMessageDialog(this,"Cliente excluido com sucesso!");
            }else{
                JOptionPane.showMessageDialog(this,"Erro ao excluir Cliente.");
            }
        }   
    }//GEN-LAST:event_btnDeletarActionPerformed

    private void btnFecharConsultCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharConsultCliActionPerformed
        this.dispose();         
    }//GEN-LAST:event_btnFecharConsultCliActionPerformed

    private void txtDS_NOMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDS_NOMEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDS_NOMEActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaConsultaCli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaConsultaCli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaConsultaCli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaConsultaCli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaConsultaCli().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnDeletar;
    private javax.swing.JButton btnFecharConsultCli;
    private javax.swing.JButton btnIncluirCli;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCliente;
    private javax.swing.JTextField txtDS_NOME;
    private javax.swing.JTextField txtNR_CPF;
    // End of variables declaration//GEN-END:variables
}
