package view;

import DAO.ClienteDAO;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Clientes;

public class TelaBuscaCliente extends javax.swing.JFrame {
    TelaVendasCabecalho VendasCab;
    RelatorioSintetico RelSintetico;
    private String TelaOrigem = "";
    /**
     * Creates new form ConsultaClientes
     */
    public TelaBuscaCliente() {
        initComponents();
    }
    
    public TelaBuscaCliente(TelaVendasCabecalho VendasCab) {
        this.VendasCab = VendasCab;
        this.TelaOrigem = "VendasCab";
        initComponents();
    }
    
    public TelaBuscaCliente(RelatorioSintetico RelSintetico) {
        this.RelSintetico = RelSintetico;
        this.TelaOrigem = "RelSintetico";
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollBar1 = new javax.swing.JScrollBar();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtDS_NOME = new javax.swing.JTextField();
        txtNR_CPF = new javax.swing.JTextField();
        btnConsultar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCliente = new javax.swing.JTable();
        btnSelecionar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consulta de Clientes");
        setResizable(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtros"));

        jLabel1.setText("Nome:");

        jLabel2.setText("CPF:");

        txtDS_NOME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDS_NOMEActionPerformed(evt);
            }
        });

        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNR_CPF, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDS_NOME, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(btnConsultar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnConsultar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtDS_NOME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtNR_CPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(26, 26, 26))
        );

        tblCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "CPF", "E-mail"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCliente);
        if (tblCliente.getColumnModel().getColumnCount() > 0) {
            tblCliente.getColumnModel().getColumn(0).setMinWidth(50);
            tblCliente.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblCliente.getColumnModel().getColumn(0).setMaxWidth(50);
            tblCliente.getColumnModel().getColumn(1).setMinWidth(220);
            tblCliente.getColumnModel().getColumn(1).setPreferredWidth(220);
            tblCliente.getColumnModel().getColumn(1).setMaxWidth(220);
            tblCliente.getColumnModel().getColumn(2).setMinWidth(150);
            tblCliente.getColumnModel().getColumn(2).setPreferredWidth(150);
            tblCliente.getColumnModel().getColumn(2).setMaxWidth(150);
            tblCliente.getColumnModel().getColumn(3).setMinWidth(220);
            tblCliente.getColumnModel().getColumn(3).setPreferredWidth(220);
            tblCliente.getColumnModel().getColumn(3).setMaxWidth(220);
        }

        btnSelecionar.setText("Selecionar");
        btnSelecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSelecionar)
                .addContainerGap(10, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelecionar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        String nomeCliente = "";
        long numeroCpf = 0; 
        
        if(txtDS_NOME.getText().trim().equals("")&& txtNR_CPF.getText().trim().equals("")){
            ArrayList <Clientes> listaCliente = ClienteDAO.listar();
            
            DefaultTableModel modelo = (DefaultTableModel) tblCliente.getModel();
            modelo.setRowCount(0);
            
            for(Clientes Cliente : listaCliente){
                modelo.addRow(new String[]{String.valueOf(Cliente.getIdCliente()),
                    Cliente.getNome(),
                    String.valueOf(Cliente.getCpf()),
                    Cliente.getEmail()
                    });
            }
            
           
        }else if(!txtDS_NOME.getText().trim().equals("")&& !txtNR_CPF.getText().trim().equals("")){
           nomeCliente = txtDS_NOME.getText();
           numeroCpf = Long.parseLong(txtNR_CPF.getText());
            ArrayList <Clientes> listaCliente = ClienteDAO.buscarNomeCPF(numeroCpf, nomeCliente);
            
            DefaultTableModel modelo = (DefaultTableModel) tblCliente.getModel();
            modelo.setRowCount(0);
            
            for(Clientes Cliente : listaCliente){
                modelo.addRow(new String[]{String.valueOf(Cliente.getIdCliente()),
                    Cliente.getNome(),
                    String.valueOf(Cliente.getCpf()),
                    Cliente.getEmail()
                    });
            }
            
        }else if(!txtDS_NOME.getText().trim().equals("")) {
            nomeCliente = txtDS_NOME.getText();
            
            ArrayList<Clientes> listaCliente = ClienteDAO.buscarClientePorNome(nomeCliente);
            
            DefaultTableModel modelo = (DefaultTableModel) tblCliente.getModel();
            modelo.setRowCount(0);
            
                for(Clientes Cliente : listaCliente){
                modelo.addRow(new String[]{String.valueOf(Cliente.getIdCliente()),
                       Cliente.getNome(),
                    String.valueOf(Cliente.getCpf()),
                    Cliente.getEmail()
                    });          
                }
        }else{
           
            numeroCpf = Long.parseLong(txtNR_CPF.getText());

            ArrayList<Clientes> listaCliente = ClienteDAO.buscarClientePorCPF(numeroCpf);
            
            DefaultTableModel modelo = (DefaultTableModel) tblCliente.getModel();
            modelo.setRowCount(0);
            
            for(Clientes Cliente : listaCliente){
                modelo.addRow(new String[]{String.valueOf(Cliente.getIdCliente()),
                    Cliente.getNome(),
                    String.valueOf(Cliente.getCpf()),
                    Cliente.getEmail()
                    });
            }         
          
    }//GEN-LAST:event_btnConsultarActionPerformed
    }
    
    private void txtDS_NOMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDS_NOMEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDS_NOMEActionPerformed

    private void btnSelecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarActionPerformed
        int linha = -1;

        linha =  tblCliente.getSelectedRow();

        if(linha < 0){
            return;
        }
        if(TelaOrigem.equals("VendasCab")){
            VendasCab.txtFK_CLIENTE.setText(String.valueOf(tblCliente.getValueAt(linha,0)));
            VendasCab.txtDS_NOME.setText(String.valueOf(tblCliente.getValueAt(linha,1)));
        }else{
            RelSintetico.txtFK_CLIENTE.setText(String.valueOf(tblCliente.getValueAt(linha,0)));
            RelSintetico.txtDS_NOME.setText(String.valueOf(tblCliente.getValueAt(linha,1)));
        }
        
        this.dispose();
    }//GEN-LAST:event_btnSelecionarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaBuscaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaBuscaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaBuscaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaBuscaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaBuscaCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnSelecionar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCliente;
    private javax.swing.JTextField txtDS_NOME;
    private javax.swing.JTextField txtNR_CPF;
    // End of variables declaration//GEN-END:variables
}
